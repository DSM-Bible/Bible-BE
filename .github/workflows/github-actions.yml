name: CI/CD using github action and docker

on:
  push:
    branches: ['main']

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # JDK setting
      - name: Set up to JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # properties 생성 (application.properties)
      - name: make application.properties file
        if: contains(github.ref, 'main')
        run: |
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          touch ./application.properties
          echo "${{ secrets.PROPERTIES }}" > ./application.properties
        shell: bash

      # gradle build
      - name: build gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test

      # docker build & push
      - name: docker build & push
        if: contains(github.ref, 'main')
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/bible . --platform=linux/amd64
          docker push ${{ secrets.DOCKER_USERNAME }}/bible

      # AWS EC2 deploy
      - name: deploy to EC2
        uses: appleboy/ssh-action@master
        id: deploy-prod
        with:
          host: ${{ secrets.HOST_PROD }}  # EC2 퍼블릭 IPv4 DNS
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
            sudo docker rm -f $(docker ps -q --filter "ancestor=${{ secrets.DOCKER_USERNAME }}/bible")
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/bible
            sudo docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/bible
            sudo docker image prune -f